plugins {
    id 'org.springframework.boot' version '2.6.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'gdsc.edu'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    //Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //Jackson XML
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.13.2'

    //Spring Data JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Mustache Template Engine
    compileOnly 'org.springframework.boot:spring-boot-starter-mustache'

    //Database drivers - MariaDB
    //compileOnly 'org.mariadb.jdbc:mariadb-java-client'
    //testCompileOnly 'org.mariadb.jdbc:mariadb-java-client'

    //Database drivers - H2
    //compileOnly 'com.h2database:h2'
    //testCompileOnly 'com.h2database:h2'

    // Database drivers - MariaDB
    compileOnly 'org.mariadb.jdbc:mariadb-java-client'
    testImplementation 'org.mariadb.jdbc:mariadb-java-client'

    // Spring Security(oauth2)
    compileOnly 'org.springframework.boot:spring-boot-starter-oauth2-client'
    testImplementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.6.8'

    // spring-session-jdbc
    compileOnly 'org.springframework.session:spring-session-jdbc'

    //Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-test'
    testImplementation 'org.junit.vintage:junit-vintage-engine'
    testImplementation 'org.assertj:assertj-core'
    testImplementation 'org.springframework.security:spring-security-test'
}

// include policy of test files
sourceSets {
    test{
        resources {
            srcDirs "${project.projectDir}/src/test/resources", "${project.projectDir}/src/main/resources"
        }
    }
}

tasks {
    processTestResources {
        duplicatesStrategy = org.gradle.api.file.DuplicatesStrategy.INCLUDE
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
